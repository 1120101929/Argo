<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="19" passed="19">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="91" started-at="2013-05-09T07:18:53Z" finished-at="2013-05-09T07:18:53Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="91" started-at="2013-05-09T07:18:53Z" finished-at="2013-05-09T07:18:53Z">
      <class name="com.bj58.argo.utils.OnlyOnceConditionTest">
        <test-method status="PASS" signature="testMore()[pri:0, instance:com.bj58.argo.utils.OnlyOnceConditionTest@20c1f10e]" name="testMore" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <exception class="com.bj58.argo.ArgoException">
            <message>
              <![CDATA[This is a test.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.bj58.argo.ArgoException: This is a test.
	at com.bj58.argo.ArgoException$ArgoExceptionBuilder.build(ArgoException.java:98)
	at com.bj58.argo.utils.OnlyOnceCondition.check(OnlyOnceCondition.java:27)
	at com.bj58.argo.utils.OnlyOnceConditionTest.testMore(OnlyOnceConditionTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.bj58.argo.ArgoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMore -->
        <test-method status="PASS" signature="testOnlyOnce()[pri:0, instance:com.bj58.argo.utils.OnlyOnceConditionTest@20c1f10e]" name="testOnlyOnce" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlyOnce -->
      </class> <!-- com.bj58.argo.utils.OnlyOnceConditionTest -->
      <class name="com.bj58.argo.learn.FileTest">
        <test-method status="PASS" signature="testContain()[pri:0, instance:com.bj58.argo.learn.FileTest@2d342ba4]" name="testContain" duration-ms="2" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContain -->
      </class> <!-- com.bj58.argo.learn.FileTest -->
      <class name="com.bj58.argo.ArgoFilterTest">
        <test-method status="PASS" signature="testInit()[pri:0, instance:com.bj58.argo.ArgoFilterTest@32ef2c60]" name="testInit" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInit -->
      </class> <!-- com.bj58.argo.ArgoFilterTest -->
      <class name="com.bj58.argo.utils.PathUtilsTest">
        <test-method status="PASS" signature="testCombine()[pri:0, instance:com.bj58.argo.utils.PathUtilsTest@509df6f1]" name="testCombine" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCombine -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:com.bj58.argo.utils.PathUtilsTest@509df6f1]" name="testContains" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="testConventPath()[pri:0, instance:com.bj58.argo.utils.PathUtilsTest@509df6f1]" name="testConventPath" duration-ms="2" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConventPath -->
        <test-method status="PASS" signature="testRelativePath()[pri:0, instance:com.bj58.argo.utils.PathUtilsTest@509df6f1]" name="testRelativePath" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelativePath -->
        <test-method status="PASS" signature="testSimplyPath()[pri:0, instance:com.bj58.argo.utils.PathUtilsTest@509df6f1]" name="testSimplyPath" duration-ms="2" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplyPath -->
        <test-method status="PASS" signature="testSimplyWithoutPrefix()[pri:0, instance:com.bj58.argo.utils.PathUtilsTest@509df6f1]" name="testSimplyWithoutPrefix" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplyWithoutPrefix -->
      </class> <!-- com.bj58.argo.utils.PathUtilsTest -->
      <class name="com.bj58.argo.ArgoExceptionTest">
        <test-method status="PASS" signature="testBoth()[pri:0, instance:com.bj58.argo.ArgoExceptionTest@488e32e7]" name="testBoth" duration-ms="25" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoth -->
        <test-method status="PASS" signature="testCause()[pri:0, instance:com.bj58.argo.ArgoExceptionTest@488e32e7]" name="testCause" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCause -->
        <test-method status="PASS" signature="testContext()[pri:0, instance:com.bj58.argo.ArgoExceptionTest@488e32e7]" name="testContext" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContext -->
        <test-method status="PASS" signature="testMessage()[pri:0, instance:com.bj58.argo.ArgoExceptionTest@488e32e7]" name="testMessage" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
      </class> <!-- com.bj58.argo.ArgoExceptionTest -->
      <class name="com.bj58.argo.route.PathMatcherTest">
        <test-method status="PASS" signature="test()[pri:0, instance:com.bj58.argo.route.PathMatcherTest@78dc6a77]" name="test" duration-ms="9" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="testPathMatch()[pri:0, instance:com.bj58.argo.route.PathMatcherTest@78dc6a77]" name="testPathMatch" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathMatch -->
      </class> <!-- com.bj58.argo.route.PathMatcherTest -->
      <class name="learn.ExceptionTest">
        <test-method status="PASS" signature="test()[pri:0, instance:learn.ExceptionTest@939b78e]" name="test" duration-ms="5" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- learn.ExceptionTest -->
      <class name="com.bj58.argo.learn.ClassTest">
        <test-method status="PASS" signature="testAnnotation()[pri:0, instance:com.bj58.argo.learn.ClassTest@4ed1e89e]" name="testAnnotation" duration-ms="1" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotation -->
        <test-method status="PASS" signature="testField()[pri:0, instance:com.bj58.argo.learn.ClassTest@4ed1e89e]" name="testField" duration-ms="2" started-at="2013-05-09T15:18:53Z" finished-at="2013-05-09T15:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testField -->
      </class> <!-- com.bj58.argo.learn.ClassTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
